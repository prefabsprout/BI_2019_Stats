knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
if(!require(corrplot)) install.packages("corrplot",repos = "http://cran.us.r-project.org", dependencies = T)
if(!require(car)) install.packages("car",repos = "http://cran.us.r-project.org", dependencies = T)
if(!require(MASS)) install.packages("MASS",repos = "http://cran.us.r-project.org", dependencies = T)
if(!require(kableExtra)) install.packages("kableExtra",repos = "http://cran.us.r-project.org", dependencies = T)
if(!require(xtable)) install.packages("xtable",repos = "http://cran.us.r-project.org", dependencies = T)
if(!require(purrr)) install.packages("purrr",repos = "http://cran.us.r-project.org", dependencies = T)
if(!require(gridExtra)) install.packages("gridExtra",repos = "http://cran.us.r-project.org", dependencies = T)
if(!require(knitr)) install.packages("knitr",repos = "http://cran.us.r-project.org", dependencies = T)
theme_set(theme_bw())
summary(Boston)
boston_standart <- as.data.frame(sapply(Boston, scale))
boston_standart$chas <- as.factor(Boston$chas)
boston_standart$rad <- as.factor(Boston$rad)
mat <- cor(boston_standart[ , purrr::map_lgl(boston_standart, is.numeric)])
corrplot(mat)
full_model <- lm(medv ~ ., boston_standart)
summary(full_model)
mod_diag <- fortify(full_model)
gg_resid <- ggplot(data = mod_diag, aes(x = .fitted, y = .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = -2, color = "red")
gg_resid
metric <- 4/nrow(boston_standart)
ggplot(mod_diag, aes(x = 1:nrow(mod_diag), y = .cooksd)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = metric, color = "red")
durbinWatsonTest(full_model)
qqPlot(mod_diag$.fitted)
test_data_fm <- data.frame(
lstat = seq(min(Boston$lstat), max(Boston$lstat), length.out = 506),
crim = mean(Boston$crim),
zn = mean(Boston$zn),
indus = mean(Boston$indus),
chas = as.factor(Boston$chas),
nox = mean(Boston$nox),
rm = mean(Boston$rm),
age = mean(Boston$age),
dis = mean(Boston$dis),
rad = as.factor(Boston$rad),
tax = mean(Boston$tax),
ptratio = mean(Boston$ptratio),
black = mean(Boston$black)
)
View(test_data_fm)
